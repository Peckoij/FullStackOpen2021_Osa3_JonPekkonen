{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","nf","fh","Phonebook","persons","filter","setPersons","nO","toLowerCase","console","log","length","map","person","name","includes","personDataObject","Person","number","onClick","deletePerson","window","confirm","personService","result","setSuccessMessage","setTimeout","catch","error","setErrorMessage","ErrorNotification","message","className","Notification","App","useState","setNewName","setNewNumber","newFilter","setNewFilter","errorMessage","successMessage","notiObject","useEffect","initialPersons","handlerObject","event","preventDefault","target","personObject","personIndex","findIndex","tempPersons","concat","returnedPerson","msg","nh","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50813854.chunk.js","sourcesContent":["import axios from 'axios'\r\n// heroku const baseUrl = 'https://puhelinluettelo-backend-peckoi.herokuapp.com/api/persons'\r\n// url for prod build, where react front is in backends root dir\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}   \r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  //lomakkeen kenttien hallinta\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  const notiObject = {\n    errorMessage,\n    setErrorMessage,\n    successMessage,\n    setSuccessMessage\n  }\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('\"add\" button clicked', event.target)\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    console.log(\"Submitted person:\", personObject);\n    // find if there already is person eith given name, if so personIndex is that persons index in persons array, otherwise personIndex is -1\n    const personIndex = persons.findIndex(person => person.name === personObject.name)\n    if (personIndex >= 0) {\n      console.log(\"Updating number, old data:\", persons[personIndex])\n      console.log(\"Updating number, new data:\", personObject)\n      // if person exist ask if user wants to update number\n      if (window.confirm(`${persons[personIndex].name} is already added to phonebook, replace old number with a new one`)) {\n        console.log(`Confirmed, update ${persons[personIndex].name}`);\n        // temporary array to remove old data from local array, \n        // after promise fullfills, concat this with result (updated number) and then setPersons  with updated array\n        const tempPersons = persons.filter(person => person.id !== persons[personIndex].id)\n        personService\n          .update(persons[personIndex].id, personObject)\n          .then(result => {\n            console.log(\"Update result: \", result);\n            setPersons(tempPersons.concat(result))\n            setNewName('')\n            setNewNumber('')\n            setSuccessMessage(\n              `${result.name} number updated`\n            )\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            console.log('Something went wrong in updating person', error)\n            setErrorMessage(\n              `Something went wrong in updating persons information, please refresh page`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          console.log(returnedPerson);\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setSuccessMessage(\n            `${returnedPerson.name} added`\n          )\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log('Something went wrong in adding person', error.response.data)\n          setErrorMessage(\n            `${error.response.data.msg}`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 8000)\n        })\n      //setPersons(persons.concat(personObject))\n    }\n\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n  // makes it easier when passing handlers to PersonForm component\n  const handlerObject = {\n    addPerson,\n    newName,\n    handleNameChange,\n    newNumber,\n    handleNumberChange\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorNotification message={errorMessage} />\n      <Notification message={successMessage} />\n      <Filter nh={newFilter} fh={handleFilterChange} />\n\n      <h2>Add new</h2>\n      <PersonForm {...handlerObject} />\n      <h2>Numbers</h2>\n      <Phonebook persons={persons} filter={newFilter} setPersons={setPersons} nO={notiObject} />\n    </div>\n  )\n}\n\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>name: <input value={newName} onChange={handleNameChange} /></div>\n      <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Filter = ({ nf, fh }) => {\n  return <div>filter shown with: <input value={nf} onChange={fh} /></div>\n}\n\nconst Phonebook = ({ persons, filter, setPersons, nO }) => {\n  filter = filter.toLowerCase()\n  console.log(\"Phonebook all names\", persons);\n  // If there is filter characters\n  if (filter.length > 0) {\n    return (\n      persons.map(person => {\n        // Check persons array if there is any matches for given string in names\n        const name = person.name.toLowerCase()\n        if (name.includes(filter)) {\n          console.log(person);\n          const personDataObject = {\n            ...person,\n            persons,\n            setPersons,\n            nO\n          }\n          return <Person key={person.id} {...personDataObject} />\n        }\n        return (\"\")\n      })\n    )\n  }\n  // Without filter show all names\n  return (\n    persons.map(person => {\n      const personDataObject = {\n        ...person,\n        persons,\n        setPersons,\n        nO\n      }\n      return <Person key={person.id} {...personDataObject} />\n    })\n  )\n}\n\nconst Person = ({ name, number, id, persons, setPersons, nO }) => {\n  return (\n    <div>\n      {name} {number}\n      <button onClick={() => { console.log(`Clicked delete ${name} with id: ${id}`); deletePerson(name, id, persons, setPersons, nO) }}>delete</button>\n    </div>\n\n  )\n}\n\n\nconst deletePerson = (name, id, persons, setPersons, nO) => {\n  console.log(\"deletePerson persons list\", persons);\n  if (window.confirm(`Delete ${name}`)) {\n    console.log(`Confirmed, delete ${name}`);\n    personService\n      .remove(id)\n      .then(result => {\n        console.log(\"Delete result: \", result);\n        setPersons(persons.filter(person => person.id !== id))\n        nO.setSuccessMessage(\n          `${name} removed from phonebook`\n        )\n        setTimeout(() => {\n          nO.setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        console.log('Something went wrong in removing person', error)\n        nO.setErrorMessage(\n          `Error in removing ${name}, person may already be removed, please reload page `\n        )\n        setTimeout(() => {\n          nO.setErrorMessage(null)\n        }, 5000)\n      })\n  }\n}\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}